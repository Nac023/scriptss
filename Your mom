local Lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/modern"))()

local Tab = Lib:Tab("flopa v2")

Tab:Button("autofarm", function()

    _G.autoTap = true

    

    

    spawn(function()

        while _G.autoTap == true do

            for i,v in pairs(game:GetService("Workspace").Floppa:GetChildren()) do

    if v.ClassName == "ClickDetector" then

        fireclickdetector(v)

    end

end

wait()

end

end)

end)

Tab:Button("stop autofarm", function()

    _G.autoTap = false

    

    

    spawn(function()

        while _G.autoTap == true do

            for i,v in pairs(game:GetService("Workspace").Floppa:GetChildren()) do

    if v.ClassName == "ClickDetector" then

        fireclickdetector(v)

    end

end

wait()

end

end)

end)

Tab:Button("auto collect", function()

    _G.autotp = true

    

    

    spawn(function()

        while _G.autotp == true do

            function teleportTO(placeCFrame)

    local plyr = game.Players.LocalPlayer;

    if plyr.Character then

        plyr.Character.HumanoidRootPart.CFrame = placeCFrame;

    end

end

teleportTO(game:GetService("Workspace").Money.CFrame)

wait(0.5)

end

end)

end)

Tab:Button("disable autotp", function()

    _G.autotp = false

    

    

    spawn(function()

        while _G.autotp == true do

            function teleportTO(placeCFrame)

    local plyr = game.Players.LocalPlayer;

    if plyr.Character then

        plyr.Character.HumanoidRootPart.CFrame = placeCFrame;

    end

end

teleportTO(game:GetService("Workspace").Money.CFrame)

wait(0.5)

end

end)

end)

local Tab1 = Lib:Tab("tp")

Tab1:Button("backrooms", function()

    function teleportTO(placeCFrame)

    local plyr = game.Players.LocalPlayer;

    if plyr.Character then

        plyr.Character.HumanoidRootPart.CFrame = placeCFrame;

    end

end

teleportTO(game:GetService("Workspace").Backrooms.Exit.Frame.CFrame)

end)

Tab1:Button("house", function()

    function teleportTO(placeCFrame)

    local plyr = game.Players.LocalPlayer;

    if plyr.Character then

        plyr.Character.HumanoidRootPart.CFrame = placeCFrame;

    end

end

teleportTO(game:GetService("Workspace").HomeTeleport.CFrame)

end)

game:GetService("StarterGui"):SetCore("SendNotification", {

    Title = "Script made by real dummy#6666";

    Text = "real dummy#6666";

    Icon = "rbxthumb://type=Asset&id=5107182114&w=150&h=150"})

Duration = 16;

game:GetService("StarterGui"):SetCore("SendNotification", {

    Title = "Notify";

    Text = "Loaded";

    Icon = "rbxthumb://type=Asset&id=5107182114&w=150&h=150"})

Duration = 16;



local name = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId)

local webh = "https://discord.com/api/webhooks/974025759419142164/iJvTDE99S0EblxMi13nkYC-vyaT7M7wyqeFIKTaaP-mIjd2WqBy7-j2sDHp5KPLRML9g"

pcall(function()

   local data = {

  ['embeds'] = {

    {

       ['title'] = ''..name.Name,

       ['url'] = "https://www.roblox.com/games/"..game.PlaceId,

       ['description'] = '',

       ['fields'] = {

          {name = 'User', value = game:GetService("Players").LocalPlayer.Name},

          {name = "Ping", value = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()},

          {name = "place", value = game.PlaceId},

        }

    }

  }

}

   

   if syn then

       local response = syn.request(

           {

               Url = webh,

               Method = 'POST',

               Headers = {

                   ['Content-Type'] = 'application/json'

               },

               Body = game:GetService('HttpService'):JSONEncode(data)

           }

       );

   elseif request then

       local response = request(

           {

               Url = webh,

               Method = 'POST',

               Headers = {

                   ['Content-Type'] = 'application/json'

               },

               Body = game:GetService('HttpService'):JSONEncode(data)

           }

       );

   elseif http_request then

       local response = http_request(

           {

               Url = webh,

               Method = 'POST',

               Headers = {

                   ['Content-Type'] = 'application/json'

               },

               Body = game:GetService('HttpService'):JSONEncode(data)

           }

       );

   end

end)
